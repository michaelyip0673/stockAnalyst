<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.polyu.finCom.Mapper.StockMapper">

    <!--根据id查询数据-->
    <select id="findStockByTicker" resultType="Stock">
        select * from stock where ticker=#{ticker} and `date` between #{start} and #{end} order by `date` asc;
    </select>

    <select id="findStockByDate" resultType="Stock">
        select * from stock where `date` = #{date};
    </select>

    <select id="getStockByDate" resultType="Stock">
        select * from stock where `date` = #{date} and ticker=#{ticker};
    </select>

    <update id="createNewTable" parameterType="string">
        CREATE TABLE IF NOT EXISTS ${table} (
                                 `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
                                 `ticker` varchar(50) NOT NULL COMMENT 'ticker',
                                 `date` VARCHAR(50) NOT NULL COMMENT 'date',
                                 `time` VARCHAR(20) DEFAULT NULL COMMENT 'time',
                                 `open` VARCHAR(50) DEFAULT NULL COMMENT 'open',
                                 `high` VARCHAR(20) DEFAULT NULL COMMENT 'high',
                                 `low` VARCHAR(50) DEFAULT NULL COMMENT 'low',
                                 `close` VARCHAR(50) DEFAULT NULL COMMENT 'close',
                                 `returnRate` VARCHAR(50) DEFAULT '0' COMMENT '当天收益率',
                                 `vol` BIGINT(20) DEFAULT NULL COMMENT 'vol',
                                 PRIMARY KEY (`id`)
        )
    </update>

    <update id="createMarketTable" parameterType="string">
        CREATE TABLE IF NOT EXISTS ${table} (
                                                `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
                                                `date` VARCHAR(50) NOT NULL COMMENT 'date',
                                                `returnRate` VARCHAR(50) DEFAULT '0' COMMENT '当天收益率',
                                                PRIMARY KEY (`id`)
        )
    </update>

    <update id="createBetaTable" parameterType="string">
        CREATE TABLE IF NOT EXISTS ${table} (
                                                `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
                                                `ticker` varchar(50) NOT NULL COMMENT 'ticker',
                                                `startDate` VARCHAR(50) NOT NULL COMMENT 'start_date',
                                                `endDate` VARCHAR(50) NOT NULL COMMENT 'end_date',
                                                `beta` VARCHAR(50) DEFAULT '0' COMMENT 'beta值',
                                                PRIMARY KEY (`id`)
        )
    </update>

    <insert id="insertBeta">
        INSERT INTO stockBeta(`ticker`,`startDate`,`endDate`,`beta`)
        VALUES
        (#{ticker},#{startDate},#{endDate},#{beta});
    </insert>

    <insert id="insert">
        INSERT INTO stock(`ticker`,`date`,`time`,`open`,`high`, `returnRate`,`low`,`close`,`vol`)
        VALUES
        (#{ticker},#{date},#{time},#{open},#{high},#{returnRate},#{low},#{close},#{vol});
    </insert>

    <insert id="insertMarket">
        INSERT INTO market(`date`, `returnRate`)
        VALUES
        (#{date},#{returnRate});
    </insert>

    <select id="getTickerList" resultType="java.lang.String">
        SELECT distinct ticker FROM stock;
    </select>

    <select id="getBetaByDate" resultType="java.lang.String">
        SELECT beta FROM stockBeta where ticker=#{ticker} and startDate=#{start} and endDate=#{end};
    </select>

    <select id="getMarketDailyReturn" resultType="java.lang.String">
        SELECT returnRate FROM market where `date`=#{date};
    </select>

    <select id="getCloseRecord" resultType="java.lang.Double">
        SELECT close FROM stock where ticker = #{ticker} and `date` between #{start} and #{end} order by `date` asc;
    </select>

    <select id="getStartEndDate" resultType="java.util.HashMap">
        SELECT min(`date`) as `start`, max(`date`) as `end`  FROM stock where ticker=#{ticker};
    </select>

    <select id="getVolByTicker" resultType="java.lang.Integer">
        select sum(vol) from stock where `date` between #{start} and #{end} and `ticker`=#{ticker};
    </select>

    <select id="getCommonDates" resultType="java.lang.String">
        select 1 from stock s where 1 = 1
        <foreach collection="stocks" separator=" " item="stock">
            and exists(select 1 from stock t where t.ticker=#{stock} and t.`date`=#{date})
        </foreach>
        limit 1
    </select>

    <select id="getFullVol" resultType="java.lang.Integer">
        select sum(vol) from stock where `date` between #{start} and #{end};
    </select>

    <select id="getDailyVol" resultType="java.lang.Integer">
        select sum(vol) from stock where `date`=#{date};
    </select>

    <select id="getReturnRatesByTickers" resultType="java.lang.Double">
        select returnRate from stock where ticker = #{ticker} and `date` between #{start} and #{end};
    </select>

    <select id="getReturnRatesByDate" resultType="java.lang.Double">
        select returnRate from stock where ticker = #{ticker} and `date` = #{date};
    </select>

    <select id="getTickerInRange" resultType="java.lang.String">
        select distinct ticker from stock where `date` between #{start} and #{end};
    </select>

    <select id="getDatesByRange" resultType="java.lang.String">
        select distinct `date` from stock where `date` between #{start} and #{end};
    </select>

</mapper>